{"version":3,"sources":["components/loadingscreen.js","axios.js","components/ques_update_modal.js","components/questionlist.js","Config.js","GraphService.js","utils/MSUtils.js","components/ques_post_model.js","components/searchpage.js","components/notfoundpage.js","components/singlequestion.js","components/profileheader.js","components/welcomepage.js","App.js","index.js"],"names":["LoadingScreen","isloading","override","css","color","loading","size","className","instance","axios","create","baseURL","getModalStyle","top","left","transform","EditQuesModal","imageURL","show","hide","ques_title","questiondesc","quid","React","useState","modalStyle","classes","makeStyles","theme","paper","position","width","maxHeight","backgroundColor","palette","background","border","boxShadow","shadows","overflow","padding","spacing","useStyles","question","setquestion","question_title","setquestion_title","imagefileURL","setimagefileURL","imagefile","setimagefile","setloading","postquestion","event","a","preventDefault","formdata","FormData","append","put","then","response","window","location","reload","catch","e","console","log","message","Modal","open","onClose","style","IconButton","aria-label","onClick","icon","onSubmit","encType","Input","type","maxLength","placeholder","value","required","onChange","target","height","accept","name","id","files","URL","createObjectURL","src","Tooltip","title","document","querySelector","Button","NewlineText","props","index","text","split","map","str","key","QuestionCards","myquestions","askques","pageupdate","setpageupdate","modalShowedit","setmodalshowedit","ques","setques","root","display","margin","purple","marginTop","marginBottom","getContrastText","red","useEffect","get","JSON","parse","localStorage","getItem","request","data","Array","from","length","_","fetchData","deleteques","delete","quess","picture","_index","_id","Card","CardHeader","Avatar","emailid","rollno","class","date","userId","CardBody","CardText","CardFooter","to","exact","config","clientId","redirectUri","scopes","graph","require","getAuthenticatedClient","accessToken","Client","init","authProvider","done","getUserDetails","client","api","user","normalizeError","error","normalizedError","errParts","debug","stringify","getUserProfile","userAgentApplication","getAccessToken","acquireTokenSilent","silentResult","isInteractionRequired","acquireTokenPopup","interactiveResult","indexOf","arrayRemove","arr","filter","ele","MyVerticallyCenteredModal","keywordarray","toLowerCase","trim","replace","displayName","surname","mail","userPrincipalName","post","onHide","SearchPage","searchtext","searchques","searchtextarray","i","l","includes","searchquess","CardTitle","NotFoundPage","is404","href","SingleQuestion","orange","deepOrange","deepPurple","path","singleques","answers","setanswer","answerpost","setanswerpost","editanswerpost","seteditanswerpost","editanswerid","seteditanswerid","update","setupdate","editsoln","seteditsoln","editimagesrc","seteditimagesrc","editimage","seteditimage","set404","ifimageexist","setifimageexist","addanswer","deleteans","editans","err","request_ans","Container","tag","answer","flexDirection","justifyContent","Form","FormGroup","classNAme","ProfileHeader","WelcomePage","alt","App","toggle","bind","state","isOpen","modalShow","isAuthenticated","_uniqueid","UserAgentApplication","auth","cache","cacheLocation","storeAuthStateInCookie","this","setState","loginPopup","prompt","setItem","logout","removeItem","alert","Navbar","dark","expand","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","NavItem","InputGroup","InputGroupAddon","addonType","UncontrolledDropdown","DropdownToggle","nav","caret","DropdownMenu","right","DropdownItem","divider","render","editques","quest","url","editquestiontitle","editquestion","editquestionimgurl","editquid","login","Component","ReactDOM","StrictMode","getElementById"],"mappings":"goBA6BeA,MAzBf,YAAuC,IAAdC,EAAa,EAAbA,UACjBC,EAAWC,cAAH,KAKd,OACE,oCACGF,EACC,oCACA,6BACE,kBAAC,IAAD,CACEG,MAAO,MACPC,QAASJ,EACTE,IAAKD,EACLI,KAAM,KAER,6BACA,wBAAIC,UAAU,UAAd,YAEA,O,4MClBKC,E,OAJEC,EAAMC,OAAO,CAC5BC,QAAS,gD,8KCIX,SAASC,KAIP,MAAO,CACLC,IAAI,GAAD,OAJO,GAIP,KACHC,KAAK,GAAD,OAJO,GAIP,KACJC,UAAU,cAAD,OANC,GAMD,eALE,GAKF,OA4JEC,OAzJf,YAOI,IANFC,EAMC,EANDA,SACAC,EAKC,EALDA,KACAC,EAIC,EAJDA,KACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,aACAC,EACC,EADDA,KACC,EACoBC,IAAMC,SAASZ,IAA7Ba,EADN,oBAeKC,EAbYC,cAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,SAAU,WACVC,MAAO,MACPC,UAAW,OACXC,gBAAiBL,EAAMM,QAAQC,WAAWN,MAC1CO,OAAQ,iBACRC,UAAWT,EAAMU,QAAQ,GACzBC,SAAU,SACVC,QAASZ,EAAMa,QAAQ,EAAG,EAAG,OAIjBC,GAff,EAgB+BlB,mBAASH,GAhBxC,mBAgBMsB,EAhBN,KAgBgBC,EAhBhB,OAiB2CpB,mBAASJ,GAjBpD,mBAiBMyB,EAjBN,KAiBsBC,EAjBtB,OAkBuCtB,mBAASP,GAlBhD,mBAkBM8B,EAlBN,KAkBoBC,EAlBpB,OAmBiCxB,mBAAS,MAnB1C,mBAmBMyB,EAnBN,KAmBiBC,EAnBjB,OAoB6B1B,oBAAS,GApBtC,mBAoBMnB,EApBN,KAoBe8C,EApBf,KAqBKC,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACnBD,EAAME,iBACNJ,GAAW,IACPK,EAAW,IAAIC,UACVC,OAAO,iBAAkBb,GAClCW,EAASE,OAAO,WAAYf,GACX,MAAbM,GACFO,EAASE,OAAO,UAAWT,GAC3BO,EAASE,OAAO,aAAc,SAE9BF,EAASE,OAAO,aAAc,SAVb,SAYGjD,EACnBkD,IADmB,gBACNrC,GAAQkC,GACrBI,MAAK,SAACC,GACLC,OAAOC,SAASC,YAEjBC,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,EAAEG,YAjBX,yDAAH,sDAmBlB,OACE,kBAACC,GAAA,EAAD,CAAOC,KAAMrD,EAAMsD,QAASrD,GAC1B,gCACE,yBAAKsD,MAAOhD,EAAYlB,UAAWmB,EAAQG,OACvCxB,EAwFA,kBAAC,EAAD,CAAeJ,WAAW,IAvF1B,oCACE,yBAAKM,UAAU,gBACb,kDACA,kBAACmE,EAAA,EAAD,CACEC,aAAW,OACXC,QAAS,SAACV,GACR/C,MAGF,kBAAC,KAAD,CACEZ,UAAWmB,EAAQmD,KACnBJ,MAAO,CAAErE,MAAO,WAItB,0BACEG,UAAU,iBACVuE,SAAU1B,EACV2B,QAAQ,uBAER,kBAACC,EAAA,EAAD,CACEL,aAAW,iBACXM,KAAK,OACLC,UAAU,MACVC,YAAY,sCACZC,MAAOvC,EACPtC,UAAU,OACV8E,UAAQ,EACRC,SAAU,SAACpB,GAAD,OAAOpB,EAAkBoB,EAAEqB,OAAOH,UAG9C,kBAACJ,EAAA,EAAD,CACEL,aAAW,iBACXM,KAAK,WACLR,MAAO,CAAEe,OAAQ,KACjBL,YAAY,yBACZC,MAAOzC,EACP0C,UAAQ,EACRC,SAAU,SAACpB,GAAD,OAAOtB,EAAYsB,EAAEqB,OAAOH,UAGxC,kBAACJ,EAAA,EAAD,CACEC,KAAK,OACLQ,OAAO,UACPC,KAAK,UACLC,GAAG,cACHpF,UAAU,YACV+E,SAAU,SAACpB,GACgB,MAArBA,EAAEqB,OAAOK,MAAM,KACjB5C,EAAgB6C,IAAIC,gBAAgB5B,EAAEqB,OAAOK,MAAM,KACnD1C,EAAagB,EAAEqB,OAAOK,MAAM,QAKtB,MAAX3C,EACC,yBAAK1C,UAAU,aACb,yBAAKA,UAAU,wBACb,yBAAKwF,IAAKhD,IACV,yBAAKxC,UAAU,YACb,kBAACyF,EAAA,EAAD,CAASC,MAAM,eACb,kBAACvB,EAAA,EAAD,CACEC,aAAW,OACXC,QAAS,SAACV,GACRlB,EAAgB,MAChBmB,QAAQC,IAAInB,GACZC,EAAa,MACbgD,SAASC,cAAc,gBAAgBf,MACrC,OAGJ,kBAAC,KAAD,CACE7E,UAAWmB,EAAQmD,KACnBJ,MAAO,CAAErE,MAAO,cAO1B,KACJ,kBAACgG,GAAA,EAAD,CAAQnB,KAAK,SAAS7E,MAAM,WAA5B,uB,OCyChB,SAASiG,GAAYC,GACnB,IAAIC,EAAQ,EAEZ,OADaD,EAAME,KACPC,MAAM,MAAMC,KAAI,SAACC,GAE3B,OADAJ,IACO,uBAAGK,IAAKN,EAAMX,GAAK,IAAMY,GAAQI,MAG7BE,OA3Lf,YAAiD,IAAxBC,EAAuB,EAAvBA,YAAaC,EAAU,EAAVA,QAAU,EACVvF,oBAAS,GADC,mBACvCwF,EADuC,KAC3BC,EAD2B,OAEdzF,oBAAS,GAFK,mBAEvCvB,EAFuC,KAE5BkD,EAF4B,OAGJ3B,mBAAS,IAHL,mBAGvC0F,EAHuC,KAGxBC,EAHwB,OAItB3F,mBAAS,IAJa,mBAIvC4F,EAJuC,KAIjCC,EAJiC,KAqBxC3F,EAhBYC,cAAW,SAACC,GAAD,MAAY,CACvC0F,KAAM,CACJC,QAAS,OACT,QAAS,CACPC,OAAQ5F,EAAMa,QAAQ,KAG1BgF,OAAQ,CACNC,UAAW,OACXC,aAAc,OACdnC,OAAQ,OACRzD,MAAO,OACP3B,MAAOwB,EAAMM,QAAQ0F,gBAAgBC,KAAI,MACzC5F,gBAAiB4F,KAAI,SAGTnF,GAChBoF,qBAAU,WACHhB,EAYE,uCACL,4BAAAxD,EAAA,6DACEH,GAAW,GADb,SAEwB1C,EAAMsH,IAAN,mBACRC,KAAKC,MAAMnE,OAAOoE,aAAaC,QAAQ,SAASxC,KAHhE,cAEQyC,EAFR,gBAKQf,EAAQe,EAAQC,MALxB,OAMElE,QAAQC,IAAIgE,EAAQC,MACpBlF,GAAW,GACXgE,EACEmB,MAAMC,KAAK,CAAEC,OAAQJ,EAAQC,KAAKG,SAAU,SAACC,EAAGlC,GAAJ,OAAc,MAT9D,2CADK,oDAaLmC,GAzBgB,uCAChB,4BAAApF,EAAA,6DACEH,GAAW,GADb,SAEwB1C,EAAMsH,IAAI,UAFlC,cAEQK,EAFR,gBAGQf,EAAQe,EAAQC,MAHxB,OAIElE,QAAQC,IAAIgE,EAAQC,MACpBlF,GAAW,GACXgE,EACEmB,MAAMC,KAAK,CAAEC,OAAQJ,EAAQC,KAAKG,SAAU,SAACC,EAAGlC,GAAJ,OAAc,MAP9D,2CADgB,oDAWhBmC,KAgBD,CAAC1B,IACJ,IAAM2B,EAAU,uCAAG,WAAOhD,GAAP,SAAArC,EAAA,6DACjBH,GAAW,GACXA,GAAW,GAFM,SAGK1C,EAAMmI,OAAN,gBAAsBjD,IAH3B,cAKjBsB,GAAeD,GALE,2CAAH,sDAQhB,OACE,6BACE,6BACA,6BACA,yBAAKzG,UAAU,aACb,4BAAKuG,EAAc,KAAO,SAA1B,cACA,4BAAQvG,UAAU,cAAcqE,QAAS,kBAAMmC,MAA/C,mBAKD9G,EACC,kBAAC,EAAD,CAAeA,UAAWA,IAE1BmH,EAAKV,KAAI,SAACmC,EAAOtC,GAAR,OACP,oCACE,kBAAC,GAAD,CACEtF,SAAU4H,EAAMC,QAChB5H,KAAMgG,EAAcX,GACpBpF,KAAM,kBACJgG,EACEmB,MAAMC,KAAK,CAAEC,OAAQpB,EAAKoB,SAAU,SAACC,EAAGM,GAAJ,OAAe,OAGvD3H,WAAYyH,EAAMhG,eAClBxB,aAAcwH,EAAMlG,SACpBrB,KAAMuH,EAAMG,MAEd,yBAAKpC,IAAKiC,EAAMG,KACd,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAY3I,UAAU,eACpB,yBAAKA,UAAU,iBACb,kBAAC4I,EAAA,EAAD,CAAQ5I,UAAWmB,EAAQ+F,QAASoB,EAAMnD,KAAK,IAC/C,yBAAKjB,MAAO,CAAE1C,MAAO,SACrB,yBAAKxB,UAAU,mBACb,yBAAKA,UAAU,mBAAmBsI,EAAMnD,MACvCmD,EAAMO,SAAWP,EAAMQ,OACtB,oCACE,2BAAO9I,UAAU,8BACdsI,EAAMO,SAET,8BACA,2BAAO7I,UAAU,8BACdsI,EAAMQ,SAGT,OAGR,6BACE,2BAAOC,MAAM,cAAcT,EAAMU,MAChCV,EAAMW,QACPxB,KAAKC,MAAMnE,OAAOoE,aAAaC,QAAQ,SAASxC,GAC9C,yBAAK2D,MAAM,cACT,kBAACtD,EAAA,EAAD,CACEzF,UAAU,kBACV0F,MAAM,sBAEN,kBAACvB,EAAA,EAAD,CACEC,aAAW,OACXC,QAAS,kBACPuC,EACEmB,MAAMC,KACJ,CAAEC,OAAQpB,EAAKoB,SACf,SAACC,EAAGM,GAAJ,OACEA,GAAUxC,QAKlB,kBAAC,IAAD,CACEhG,UAAWmB,EAAQmD,KACnBJ,MAAO,CAAErE,MAAO,YAItB,kBAAC4F,EAAA,EAAD,CACEzF,UAAU,kBACV0F,MAAM,wBAEN,kBAACvB,EAAA,EAAD,CACEC,aAAW,SACXC,QAAS,WACP+D,EAAWE,EAAMG,OAGnB,kBAAC,KAAD,CACEzI,UAAWmB,EAAQmD,KACnBJ,MAAO,CAAErE,MAAO,YAKtB,OAGR,kBAACqJ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,8CACA,kBAACrD,GAAD,CAAaG,KAAMqC,EAAMhG,eAAgB8C,GAAIkD,EAAMG,QAGvD,kBAACW,EAAA,EAAD,KACE,kBAAC,IAAD,CACEC,GAAE,oBAAef,EAAMG,KACvBzI,UAAU,eACVsJ,OAAK,GAEL,yBAAKtJ,UAAU,QAAf,oBAIN,oCCvLDuJ,GAAS,CACpBC,SAAU,uCACVC,YAAa,gDACbC,OAAQ,CAAC,cCHPC,GAAQC,EAAQ,KAEpB,SAASC,GAAuBC,GAM9B,OALeH,GAAMI,OAAOC,KAAK,CAC/BC,aAAc,SAACC,GACbA,EAAK,KAAMJ,MAMV,SAAeK,GAAtB,mC,8CAAO,WAA8BL,GAA9B,iBAAA/G,EAAA,6DACCqH,EAASP,GAAuBC,GADjC,SAGcM,EAAOC,IAAI,OAAO7C,MAHhC,cAGC8C,EAHD,yBAKEA,GALF,4C,sBCTA,SAASC,GAAeC,GAC3B,IAAIC,EAAkB,GACtB,GAAuB,kBAAXD,EAAqB,CAC7B,IAAIE,EAAWF,EAAMtE,MAAM,KAC3BuE,EAAkBC,EAASzC,OAAS,EAChC,CAAEnE,QAAS4G,EAAS,GAAIC,MAAOD,EAAS,IACxC,CAAE5G,QAAS0G,QAEfC,EAAkB,CACd3G,QAAS0G,EAAM1G,QACf6G,MAAOlD,KAAKmD,UAAUJ,IAG9B,OAAOC,EAGJ,SAAeI,GAAtB,qC,8CAAO,WAA8BC,EAAsBpB,GAApD,eAAA3G,EAAA,+EAEyBgI,GAAeD,EAAsBpB,GAF9D,YAEKI,EAFL,wCAKkBK,GAAeL,GALjC,wEAOQ,MAPR,wG,+BAcQiB,G,mFAAf,WAA8BD,EAAsBpB,GAApD,iBAAA3G,EAAA,+EAEiC+H,EACpBE,mBAAmB,CAChBtB,OAAQA,IAJxB,cAEYuB,EAFZ,yBAOeA,EAAanB,aAP5B,oCASYoB,GAAsB,EAAD,IATjC,kCAU0CJ,EACzBK,kBAAkB,CACfzB,OAAQA,IAZ5B,eAUgB0B,EAVhB,yBAemBA,EAAkBtB,aAfrC,6E,sBAsBA,SAASoB,GAAsBV,GAC3B,SAAKA,EAAM1G,SAAW0G,EAAM1G,QAAQmE,QAAU,KAK1CuC,EAAM1G,QAAQuH,QAAQ,qBAAuB,GAC7Cb,EAAM1G,QAAQuH,QAAQ,yBAA2B,GACjDb,EAAM1G,QAAQuH,QAAQ,mBAAqB,GAC3Cb,EAAM1G,QAAQuH,QAAQ,iCAAmC,G,OCnDjE,SAAShL,KAIP,MAAO,CACLC,IAAI,GAAD,OAJO,GAIP,KACHC,KAAK,GAAD,OAJO,GAIP,KACJC,UAAU,cAAD,OANC,GAMD,eALE,GAKF,OAyKb,SAAS8K,GAAYC,EAAK1G,GACxB,OAAO0G,EAAIC,QAAO,SAAUC,GAC1B,OAAOA,GAAO5G,KAIH6G,OA5Kf,SAAmC3F,GAAQ,IAAD,EACnB/E,IAAMC,SAASZ,IAA7Ba,EADiC,oBAclCC,EAZYC,cAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,SAAU,WACVC,MAAO,MACPC,UAAW,OACXC,gBAAiBL,EAAMM,QAAQC,WAAWN,MAC1CO,OAAQ,iBACRC,UAAWT,EAAMU,QAAQ,GACzBC,SAAU,SACVC,QAASZ,EAAMa,QAAQ,EAAG,EAAG,OAGjBC,GAdwB,EAeRlB,mBAAS,IAfD,mBAejCmB,EAfiC,KAevBC,EAfuB,OAgBIpB,mBAAS,IAhBb,mBAgBjCqB,EAhBiC,KAgBjBC,EAhBiB,OAiBAtB,mBAAS,MAjBT,mBAiBjCuB,EAjBiC,KAiBnBC,EAjBmB,OAkBNxB,mBAAS,MAlBH,mBAkBjCyB,EAlBiC,KAkBtBC,EAlBsB,OAmBV1B,oBAAS,GAnBC,mBAmBjCnB,EAnBiC,KAmBxB8C,EAnBwB,KAoBlCC,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACnBD,EAAME,iBACNJ,GAAW,GACP+I,EAAerJ,EAChBsJ,cACAC,OACAC,QAAQ,SAAU,KAClBD,OACAC,QAAQ,iBAAkB,IAC1B5F,MAAM,KATU,SAUEoF,GAAYK,EAAc,IAV5B,cAUnBA,EAVmB,QAWf1I,EAAW,IAAIC,UACVC,OACP,OACAsE,KAAKC,MAAMnE,OAAOoE,aAAaC,QAAQ,SAASmE,aAElD9I,EAASE,OACP,SACAsE,KAAKC,MAAMnE,OAAOoE,aAAaC,QAAQ,SAASxC,IAElDnC,EAASE,OACP,SACAsE,KAAKC,MAAMnE,OAAOoE,aAAaC,QAAQ,SAASoE,SAAW,MAE7D/I,EAASE,OACP,UACAsE,KAAKC,MAAMnE,OAAOoE,aAAaC,QAAQ,SAASqE,MAC9CxE,KAAKC,MAAMnE,OAAOoE,aAAaC,QAAQ,SAASsE,mBAEpDjJ,EAASE,OAAO,WAAYf,GAC5Ba,EAASE,OAAO,iBAAkBb,GACjB,MAAbI,GACFO,EAASE,OAAO,UAAWT,GAC3BO,EAASE,OAAO,aAAc,SAE9BF,EAASE,OAAO,aAAc,SAEhCF,EAASE,OAAO,eAAgBwI,GArCb,UAsCGzL,EACnBiM,KAAK,SAAUlJ,GACfI,MAAK,SAACC,GACLC,OAAOC,SAASC,YAEjBC,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,EAAEG,YA3CX,2DAAH,sDA8ClB,OACE,kBAACC,GAAA,EAAD,CAAOC,KAAM+B,EAAMpF,KAAMsD,QAAS8B,EAAMqG,QACtC,gCACE,yBAAKlI,MAAOhD,EAAYlB,UAAWmB,EAAQG,OACvCxB,EAwFA,kBAAC,EAAD,CAAeJ,WAAW,IAvF1B,oCACE,yBAAKM,UAAU,gBACb,8CACA,kBAACmE,EAAA,EAAD,CACEC,aAAW,OACXC,QAAS,SAACV,GACRoC,EAAMqG,WAGR,kBAAC,KAAD,CACEpM,UAAWmB,EAAQmD,KACnBJ,MAAO,CAAErE,MAAO,WAItB,0BACEG,UAAU,iBACVuE,SAAU1B,EACV2B,QAAQ,uBAER,kBAACC,EAAA,EAAD,CACEL,aAAW,iBACXM,KAAK,OACLC,UAAU,MACVC,YAAY,sCACZC,MAAOvC,EACPtC,UAAU,OACV8E,UAAQ,EACRC,SAAU,SAACpB,GAAD,OAAOpB,EAAkBoB,EAAEqB,OAAOH,UAG9C,kBAACJ,EAAA,EAAD,CACEL,aAAW,iBACXM,KAAK,WACLR,MAAO,CAAEe,OAAQ,KACjBL,YAAY,yBACZC,MAAOzC,EACP0C,UAAQ,EACRC,SAAU,SAACpB,GAAD,OAAOtB,EAAYsB,EAAEqB,OAAOH,UAGxC,kBAACJ,EAAA,EAAD,CACEC,KAAK,OACLQ,OAAO,UACPC,KAAK,UACLC,GAAG,cACHpF,UAAU,YACV+E,SAAU,SAACpB,GACgB,MAArBA,EAAEqB,OAAOK,MAAM,KACjB5C,EAAgB6C,IAAIC,gBAAgB5B,EAAEqB,OAAOK,MAAM,KACnD1C,EAAagB,EAAEqB,OAAOK,MAAM,QAKjB,MAAhB7C,EACC,yBAAKxC,UAAU,aACb,yBAAKA,UAAU,wBACb,yBAAKwF,IAAKhD,IACV,yBAAKxC,UAAU,YACb,kBAACyF,EAAA,EAAD,CAASC,MAAM,eACb,kBAACvB,EAAA,EAAD,CACEC,aAAW,OACXC,QAAS,SAACV,GACRlB,EAAgB,MAChBmB,QAAQC,IAAInB,GACZC,EAAa,MACbgD,SAASC,cAAc,gBAAgBf,MACrC,OAGJ,kBAAC,KAAD,CACE7E,UAAWmB,EAAQmD,KACnBJ,MAAO,CAAErE,MAAO,cAO1B,KACJ,kBAACgG,GAAA,EAAD,CAAQnB,KAAK,SAAS7E,MAAM,WAA5B,uB,0BCxGhB,SAASiG,GAAYC,GACnB,IAAIC,EAAQ,EAEZ,OADaD,EAAME,KACPC,MAAM,MAAMC,KAAI,SAACC,GAE3B,OADAJ,IACO,uBAAGK,IAAKN,EAAMX,GAAK,IAAMY,GAAQI,MAI7BiG,OA1Ef,YAAqC,IAAfC,EAAc,EAAdA,WAAc,EACJrL,mBAAS,IADL,mBAC3BsL,EAD2B,KACfzF,EADe,KA8BlC,OA5BAS,qBAAU,WAAM,4CAEd,oCAAAxE,EAAA,sEACwB7C,EAAMsH,IAAI,UADlC,OASE,IARMK,EADR,OAEQ2E,EAAkBF,EACrBV,cACAC,OACAC,QAAQ,SAAU,KAClBD,OACAC,QAAQ,iBAAkB,IAC1B5F,MAAM,KACAuG,EAAI,EAAGA,EAAI5E,EAAQC,KAAKG,OAAQwE,IAAK,CAI5C,IAHIzG,EAAQ,EAEZpC,QAAQC,IAAIgE,EAAQC,KAAK2E,GAAGd,cACnBe,EAAI,EAAGA,EAAIF,EAAgBvE,OAAQyE,IAC1C9I,QAAQC,IAAR,0BAA+BgE,EAAQC,KAAK2E,GAAGd,eAC3C9D,EAAQC,KAAK2E,GAAGd,aAAagB,SAASH,EAAgBE,MACxD1G,GAAS,GAITA,EAAQwG,EAAgBvE,SAAW,GAAe,IAAVjC,GAC1Cc,GAAQ,SAACyE,GAAD,6BAAaA,GAAb,CAAkB1D,EAAQC,KAAK2E,QArB7C,4CAFc,sBACd3F,EAAQ,IADM,mCA0BdqB,KACC,CAACmE,IACqB,GAArBC,EAAWtE,QAAiC,GAAnBqE,EAAWrE,OAC/BsE,EAAWpG,KAAI,SAACyG,GAAD,OACpB,yBAAKvG,IAAKuG,EAAYnE,KACpB,kBAACC,EAAA,EAAD,CAAM1I,UAAU,QACd,kBAAC2I,EAAA,EAAD,yBACA,kBAACO,EAAA,EAAD,KACE,kBAAC2D,GAAA,EAAD,KACE,8CACCD,EAAYzH,MAEf,kBAACgE,EAAA,EAAD,KACE,8CACA,kBAAC,GAAD,CACElD,KAAM2G,EAAYtK,eAClB8C,GAAIwH,EAAYnE,OAGpB,kBAAC,IAAD,CACEY,GAAE,oBAAeuD,EAAYnE,KAC7BzI,UAAU,kBACVsJ,OAAK,GAHP,mBASJ,iCAIG,yBAAKP,MAAM,aAAX,sB,qCCtCI+D,OAtBf,YAAkC,IAAVC,EAAS,EAATA,MACtB,OACE,oCACGA,EACC,yBAAK3H,GAAG,YACN,yBAAK2D,MAAM,YACT,yBAAKA,MAAM,gBACT,sCAEF,oDACA,uIAIA,uBAAGiE,KAAK,KAAR,oBAGF,O,OCqbV,SAASlH,GAAYC,GACnB,IAAIC,EAAQ,EAEZ,OADaD,EAAME,KAAO,IACdC,MAAM,MAAMC,KAAI,SAACC,GAE3B,OADAJ,IACO,uBAAGK,IAAKN,EAAMX,GAAK,IAAMY,GAAQI,MAG7B6G,OA5bf,WACE,IAAM9K,EAAYf,cAAW,SAACC,GAAD,MAAY,CACvC0F,KAAM,CACJC,QAAS,OACT,QAAS,CACPC,OAAQ5F,EAAMa,QAAQ,KAG1BgL,OAAQ,CACNrN,MAAOwB,EAAMM,QAAQ0F,gBAAgB8F,KAAW,MAChDzL,gBAAiByL,KAAW,KAC5BlI,OAAQ,OACRzD,MAAO,QAET0F,OAAQ,CACNrH,MAAOwB,EAAMM,QAAQ0F,gBAAgB+F,KAAW,MAChD1L,gBAAiB0L,KAAW,UAhBR,EAmBAnM,mBACtBsC,OAAOC,SAASwJ,KAAK9G,MAAM,KAAK3C,OAAOC,SAASwJ,KAAK9G,MAAM,KAAK+B,OAAS,IApBnD,mBAmBjBoF,EAnBiB,aAsBMpM,mBAAS,KAtBf,mBAsBjBqM,EAtBiB,KAsBLxG,EAtBK,OAuBK7F,mBAAS,IAvBd,mBAuBjBsM,EAvBiB,KAuBRC,EAvBQ,OAwBYvM,mBAAS,IAxBrB,mBAwBjBwM,EAxBiB,KAwBLC,EAxBK,OAyBoBzM,mBAAS,IAzB7B,mBAyBjB0M,EAzBiB,KAyBDC,EAzBC,OA0BgB3M,mBAAS,IA1BzB,mBA0BjB4M,EA1BiB,KA0BHC,EA1BG,OA2BI7M,oBAAS,GA3Bb,mBA2BjB8M,EA3BiB,KA2BTC,EA3BS,OA4BQ/M,oBAAS,GA5BjB,mBA4BjBgN,EA5BiB,KA4BPC,EA5BO,OA6BgBjN,mBAAS,MA7BzB,mBA6BjBuB,EA7BiB,KA6BHC,EA7BG,QA8BUxB,mBAAS,MA9BnB,qBA8BjByB,GA9BiB,MA8BNC,GA9BM,SA+BM1B,oBAAS,GA/Bf,qBA+BjBnB,GA/BiB,MA+BR8C,GA/BQ,SAgCgB3B,mBAAS,MAhCzB,qBAgCjBkN,GAhCiB,MAgCHC,GAhCG,SAiCUnN,mBAAS,MAjCnB,qBAiCjBoN,GAjCiB,MAiCNC,GAjCM,SAkCArN,oBAAS,GAlCT,qBAkCjB8L,GAlCiB,MAkCVwB,GAlCU,SAmCgBtN,oBAAS,GAnCzB,qBAmCjBuN,GAnCiB,MAmCHC,GAnCG,MAoClBC,GAAS,uCAAG,WAAO5L,GAAP,eAAAC,EAAA,6DAChBD,EAAME,iBACNJ,IAAW,IACPK,EAAW,IAAIC,UACVC,OACP,OACAsE,KAAKC,MAAMnE,OAAOoE,aAAaC,QAAQ,SAASmE,aAElD9I,EAASE,OACP,SACAsE,KAAKC,MAAMnE,OAAOoE,aAAaC,QAAQ,SAASxC,IAElDnC,EAASE,OACP,SACAsE,KAAKC,MAAMnE,OAAOoE,aAAaC,QAAQ,SAASoE,SAAW,MAE7D/I,EAASE,OACP,UACAsE,KAAKC,MAAMnE,OAAOoE,aAAaC,QAAQ,SAASqE,MAC9CxE,KAAKC,MAAMnE,OAAOoE,aAAaC,QAAQ,SAASsE,mBAEpDjJ,EAASE,OAAO,SAAUsK,GAC1BxK,EAASE,OAAO,aAAcmK,EAAW7E,KACxB,MAAb/F,IACFO,EAASE,OAAO,UAAWT,IAC3BO,EAASE,OAAO,aAAc,SAE9BF,EAASE,OAAO,aAAc,SA3BhB,UA6BMjD,EACnBiM,KAAK,eAAgBlJ,GACrBI,MAAK,SAACC,GACL0K,GAAWD,GACXtL,EAAgB,MAChBiL,EAAc,IACd/K,GAAa,MACbgD,SAASC,cAAc,gBAAgBf,MAAQ,QAEhDnB,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,EAAEG,YAtCd,eAuChBlB,IAAW,GAvCK,4CAAH,sDAyCT+L,GAAS,uCAAG,WAAOvJ,GAAP,SAAArC,EAAA,6DAChBH,IAAW,GADK,SAEM1C,EACnBmI,OADmB,sBACGiF,EAAW7E,IADd,YACqBrD,IACxC/B,MAAK,SAACC,GAAD,OAAc0K,GAAWD,MAC9BrK,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,EAAEG,YALd,cAMhBlB,IAAW,GANK,2CAAH,sDAQTgM,GAAO,uCAAG,WAAOxJ,GAAP,eAAArC,EAAA,6DACdH,IAAW,GACPK,EAAW,IAAIC,SACF,MAAbmL,IACFpL,EAASE,OAAO,UAAWkL,IAC3BpL,EAASE,OAAO,aAAc,SAE9BF,EAASE,OAAO,aAAc,SAEhCF,EAASE,OAAO,SAAUwK,GATZ,SAUQzN,EACnBkD,IADmB,sBACAkK,EAAW7E,IADX,YACkBrD,GAAMnC,GAC3CI,MAAK,SAACC,GACL0K,GAAWD,GACXG,GAAY,GACZJ,EAAgB,IAChBF,EAAkB,OAEnBlK,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,EAAEG,YAlBhB,cAmBdlB,IAAW,GAnBG,2CAAH,sDAqBb2E,qBAAU,WAAM,4CACd,8BAAAxE,EAAA,sEACwB7C,EACnBsH,IADmB,gBACN6F,IACb3J,OAAM,SAACmL,GAAD,OAASN,IAAO,MAH3B,cACQ1G,EADR,gBAI4B3H,EAAMsH,IAAN,uBAA0B6F,IAJtD,cAIQyB,EAJR,gBAKQhI,EAAQe,EAAQC,MALxB,wBAMQ0F,EAAUsB,EAAYhH,MAN9B,6CADc,uBAAC,WAAD,wBASdK,KACC,CAAC4F,IACJ,IAAM5M,GAAUgB,IAChB,OACE,oCACE,kBAAC,GAAD,CAAc4K,MAAOA,KACnBA,GAuTE,KAtTF,oCACGjN,GACC,kBAAC,EAAD,CAAeJ,WAAW,IAE1B,oCACE,kBAACqP,EAAA,EAAD,KACE,wBAAI/O,UAAU,aAAd,YACA,kBAAC0I,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYqG,IAAI,MACd,gCAAS1B,EAAWhL,gBACpB,6BACE,2BAAOyG,MAAM,cAAcuE,EAAWtE,QAG1C,kBAACE,EAAA,EAAD,KACE,kBAAC2D,GAAA,EAAD,KACE,kDAEF,kBAAC1D,EAAA,EAAD,KACE,kBAAC,GAAD,CACElD,KAAMqH,EAAWlL,SACjBgD,GAAIkI,EAAW7E,OAGnB,yBACEjD,IAAK8H,EAAW/E,QAChBvI,UAAU,aACVqE,QAAS,kBAAMd,OAAOS,KAAKsJ,EAAW/E,QAAS,aAEjD,kBAACsE,GAAA,EAAD,CAAWmC,IAAI,MACb,+CAEF,kBAAC7F,EAAA,EAAD,KACE,gCACE,2BAAOnJ,UAAU,cACdsN,EAAWnI,KACZ,+BAGJ,2BAAOnF,UAAU,cACdsN,EAAWzE,QACZ,8BAGF,2BAAO7I,UAAU,cACdsN,EAAWxE,OACZ,iCAKR,6BACoB,IAAnByE,EAAQtF,OACP,+CAEA,yCAEDsF,EAAQpH,KAAI,SAAC8I,GAAD,OACX,yBAAK5I,IAAK4I,EAAOxG,KACf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEzE,MAAO,CACL8C,QAAS,OACTkI,cAAe,MACfC,eAAgB,kBAGlB,yBAAKnP,UAAU,iBACb,kBAAC4I,EAAA,EAAD,CACE5I,UAAWmB,GAAQ+L,OACnBhJ,MAAO,CAAEiD,UAAW,OAAQC,aAAc,SAEzC6H,EAAO9J,KAAK,IAEf,yBAAKjB,MAAO,CAAE1C,MAAO,SACrB,yBAAKxB,UAAU,mBACb,yBAAKA,UAAU,mBAAmBiP,EAAO9J,MACxC8J,EAAOpG,SAAWoG,EAAOnG,OACxB,oCACE,2BAAO9I,UAAU,8BACdiP,EAAOpG,SAEV,8BACA,2BAAO7I,UAAU,8BACdiP,EAAOnG,SAGV,OAGPmG,EAAOhG,QACRxB,KAAKC,MAAMnE,OAAOoE,aAAaC,QAAQ,SAASxC,GAC9C,6BACE,kBAACK,EAAA,EAAD,CACEzF,UAAU,kBACV0F,MAAM,sBAEN,kBAACvB,EAAA,EAAD,CACEC,aAAW,OACXC,QAAS,WACP6J,GAAY,GACZJ,EAAgBmB,EAAOxG,KACvB2F,GAAgBa,EAAO1G,SACvBqF,EAAkBqB,EAAOA,QACzBR,GAAgBQ,EAAO1G,QAAQN,OAAS,KAG1C,kBAAC,IAAD,CACEjI,UAAWmB,GAAQmD,KACnBJ,MAAO,CAAErE,MAAO,YAItB,kBAAC4F,EAAA,EAAD,CACEzF,UAAU,kBACV0F,MAAM,wBAEN,kBAACvB,EAAA,EAAD,CACEC,aAAW,SACXC,QAAS,kBAAMsK,GAAUM,EAAOxG,OAEhC,kBAAC,KAAD,CACEzI,UAAWmB,GAAQmD,KACnBJ,MAAO,CAAErE,MAAO,YAKtB,MAGN,kBAACqJ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,8CACA,kBAAC,GAAD,CAAalD,KAAMgJ,EAAOA,OAAQ7J,GAAI6J,EAAOxG,OAG/C,yBACEjD,IAAKyJ,EAAO1G,QACZvI,UAAU,YACVqE,QAAS,kBACPd,OAAOS,KAAKsJ,EAAW/E,QAAS,eAKxC,iCAGJ,6BACC0F,EACC,oCACE,kDACA,kBAACmB,GAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC5K,EAAA,EAAD,CACEC,KAAK,WACLG,MAAO8I,EACP7I,UAAQ,EACRC,SAAU,SAACpB,GAAD,OAAOiK,EAAkBjK,EAAEqB,OAAOH,QAC5C7E,UAAU,OACVkE,MAAO,CAAEe,OAAQ,QAIrB,kBAACoK,EAAA,EAAD,CAAWrP,UAAU,WACnB,yBAAKA,UAAU,wBACb,yBAAKwF,IAAK2I,KACV,yBAAKnO,UAAU,YACb,kBAACyF,EAAA,EAAD,CAASC,MAAM,eACb,kBAACvB,EAAA,EAAD,CACEC,aAAW,OACXC,QAAS,SAACV,GACRyK,GAAgB,MAChBE,GAAa,MACbG,IAAgB,GAChB9I,SAASC,cACP,iBACAf,MAAQ,KACVc,SAASC,cACP,YACA1B,MAAM8C,QAAU,SAGnBwH,GACC,kBAAC,KAAD,CACExO,UAAWmB,GAAQmD,KACnBJ,MAAO,CAAErE,MAAO,SAEhB,UAMd,kBAACwP,EAAA,EAAD,KACE,kBAAC5K,EAAA,EAAD,CACEC,KAAK,OACLQ,OAAO,UACPC,KAAK,UACLC,GAAG,eACHpF,UAAU,YACV+E,SAAU,SAACpB,GACgB,MAArBA,EAAEqB,OAAOK,MAAM,KACjB+I,GACE9I,IAAIC,gBAAgB5B,EAAEqB,OAAOK,MAAM,KAErCoJ,IAAgB,GAChB9I,SAASC,cAAc,YAAY1B,MAAM8C,QACvC,QACFsH,GAAa3K,EAAEqB,OAAOK,MAAM,SAKpC,kBAACgK,EAAA,EAAD,CAAWrP,UAAU,QACnB,kBAAC6F,GAAA,EAAD,CACE7F,UAAU,kBACVqE,QAAS,kBAAMuK,GAAQf,KAFzB,oBAOF,kBAACwB,EAAA,EAAD,CAAWC,UAAU,QACnB,kBAACzJ,GAAA,EAAD,CACE7F,UAAU,iBACVqE,QAAS,WACP6J,GAAY,GACZJ,EAAgB,IAChBF,EAAkB,MALtB,aAcN,oCACE,8CACA,kBAACwB,GAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC5K,EAAA,EAAD,CACEC,KAAK,WACLG,MAAO4I,EACP3I,UAAQ,EACRC,SAAU,SAACpB,GAAD,OAAO+J,EAAc/J,EAAEqB,OAAOH,QACxC7E,UAAU,OACVkE,MAAO,CAAEe,OAAQ,QAGrB,kBAACoK,EAAA,EAAD,KACE,kBAAC5K,EAAA,EAAD,CACEC,KAAK,OACLQ,OAAO,UACPC,KAAK,UACLC,GAAG,cACHpF,UAAU,YACV+E,SAAU,SAACpB,GACgB,MAArBA,EAAEqB,OAAOK,MAAM,KACjB5C,EACE6C,IAAIC,gBAAgB5B,EAAEqB,OAAOK,MAAM,KAErC1C,GAAagB,EAAEqB,OAAOK,MAAM,SAKnB,MAAhB7C,EACC,yBAAKxC,UAAU,iBACb,yBAAKA,UAAU,wBACb,yBAAKwF,IAAKhD,IACV,yBAAKxC,UAAU,YACb,kBAACyF,EAAA,EAAD,CAASC,MAAM,eACb,kBAACvB,EAAA,EAAD,CACEC,aAAW,OACXC,QAAS,SAACV,GACRlB,EAAgB,MAChBE,GAAa,MACbgD,SAASC,cACP,gBACAf,MAAQ,OAGZ,kBAAC,KAAD,CACE7E,UAAWmB,GAAQmD,KACnBJ,MAAO,CAAErE,MAAO,cAO1B,KACJ,kBAACwP,EAAA,EAAD,KACE,kBAACxJ,GAAA,EAAD,CAAQ7F,UAAU,kBAAkBqE,QAASqK,IAA7C,eAUd,6BACA,6BACA,6BACA,gC,OCzaKa,OAzBf,YAAkC,IAATpK,EAAQ,EAARA,KACvB,OACE,6BACE,yBAAKnF,UAAU,WACb,kBAAC+O,EAAA,EAAD,CAAW/O,UAAU,gBACnB,wBAAIA,UAAU,SAAd,uBACA,uCAAamF,GACb,uBAAGnF,UAAU,QAAb,sCAEE,6BAFF,uEAIE,6BAJF,mEAUJ,yBACEwF,IAAI,sGACJxF,UAAU,e,OCkBHwP,OArCf,YAAmC,IAAZnL,EAAW,EAAXA,QACrB,OACE,oCACE,yBAAKrE,UAAU,eACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,eACb,yBACEA,UAAU,kBACVwF,IAAI,sGACJiK,IAAI,MAGR,6BACA,yBAAKzP,UAAU,kBACb,yBAAKA,UAAU,eACb,oCACO,6BADP,kBAIA,6DACiC,6BADjC,gHAKA,4BAAQqE,QAAS,kBAAMA,MAAvB,iBAIN,6BACA,yBAAKrE,UAAU,qBCuQV0P,G,kDAjQb,WAAY3J,GAAQ,IAAD,8BACjB,cAAMA,IACD4J,OAAS,EAAKA,OAAOC,KAAZ,gBACd,EAAKC,MAAQ,CACXC,QAAQ,EACRpQ,WAAW,EACX8K,MAAO,KACPuF,WAAW,EACXC,gBAAkD,OAAjCrI,aAAaC,QAAQ,QACtC0C,KAAM7C,KAAKC,MAAMnE,OAAOoE,aAAaC,QAAQ,SAC7C0E,WAAY,GACZ2D,UAAW,IAEb,EAAKnF,qBAAuB,IAAIoF,IAAqB,CACnDC,KAAM,CACJ3G,SAAUD,GAAOC,SACjBC,YAAaF,GAAOE,aAEtB2G,MAAO,CACLC,cAAe,iBACfC,wBAAwB,KApBX,E,qDAyBjBC,KAAKC,SAAS,CACZV,QAASS,KAAKV,MAAMC,W,uKAKdS,KAAKzF,qBAAqB2F,WAAW,CACzC/G,OAAQH,GAAOG,OACfgH,OAAQ,mB,cAEVH,KAAKC,SAAS,CACZ9Q,WAAW,I,SAEMmL,GACjB0F,KAAKzF,qBACLvB,GAAOG,Q,cAFHY,E,gBAIA/G,OAAOoE,aAAagJ,QAAQ,OAAQlJ,KAAKmD,UAAUN,I,OACzDiG,KAAKC,SAAS,CACZR,iBAAiB,EACjB1F,KAAM,CACJyB,YAAazB,EAAKyB,YAClBG,kBAAmB5B,EAAK2B,MAAQ3B,EAAK4B,kBACrC9G,GAAIkF,EAAKlF,IAEXoF,MAAO,KACP9K,WAAW,I,kDAGb6Q,KAAKC,SAAS,CACZR,iBAAiB,EACjB1F,KAAM,GACNE,MAAOD,GAAe,EAAD,IACrB7K,WAAW,I,yQAKT6Q,KAAKzF,qBAAqB8F,S,OAChCjJ,aAAakJ,WAAW,Q,qIAEhB,IAAD,OAKP,OAJIN,KAAKV,MAAMrF,QACbsG,MAAMP,KAAKV,MAAMrF,MAAM1G,SACvByM,KAAKC,SAAS,CAAEhG,MAAO,QAGvB,oCACI+F,KAAKV,MAAMnQ,UAiLT,KAhLF,kBAAC,IAAD,KACG6Q,KAAKV,MAAMG,gBACV,oCACE,kBAACe,EAAA,EAAD,CAAQlR,MAAM,OAAOmR,MAAI,EAACC,OAAO,KAAKjR,UAAU,OAC9C,kBAAC+O,EAAA,EAAD,KACE,kBAACmC,EAAA,EAAD,CAAalE,KAAK,KAAlB,uBACA,kBAACmE,EAAA,EAAD,CAAe9M,QAASkM,KAAKZ,SAC7B,kBAACyB,EAAA,EAAD,CAAUtB,OAAQS,KAAKV,MAAMC,OAAQuB,QAAM,GACzC,kBAACC,EAAA,EAAD,CAAKtR,UAAU,UAAUqR,QAAM,GAC7B,kBAACE,EAAA,EAAD,KACE,kBAAC,IAAD,CAAelI,GAAG,IAAIrJ,UAAU,WAAWsJ,OAAK,GAAhD,SAIF,kBAACiI,EAAA,EAAD,KACE,kBAAC,IAAD,CACElI,GAAG,eACHrJ,UAAU,WACVsJ,OAAK,GAHP,gBAQF,kBAACiI,EAAA,EAAD,KACE,kBAAC,IAAD,CACElI,GAAG,UACHrJ,UAAU,WACVsJ,OAAK,GAHP,gBASJ,kBAACgI,EAAA,EAAD,KACE,kBAACjC,EAAA,EAAD,CAAWnL,MAAO,CAAE1C,MAAO,MACzB,kBAACgQ,EAAA,EAAD,KACE,kBAAC/M,EAAA,EAAD,CACEG,YAAY,oBACZ7E,KAAK,KACL2E,KAAK,OACLG,MAAO0L,KAAKV,MAAMvD,WAClBtM,UAAU,eACV+E,SAAU,SAACpB,GAAD,OACR,EAAK6M,SAAS,CAAElE,WAAY3I,EAAEqB,OAAOH,WAGzC,kBAAC4M,EAAA,EAAD,CAAiBC,UAAU,UACzB,kBAAC,IAAD,CACErI,GAAG,UACHrJ,UAAU,kBACVsJ,OAAK,GAEL,kBAAC,IAAD,WAMV,yBAAKtJ,UAAU,kBACf,kBAACsR,EAAA,EAAD,CAAKD,QAAM,GACT,kBAACM,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAgBC,KAAG,EAACC,OAAK,GACvB,uBACE9R,UAAU,iEACVkE,MAAO,CAAE1C,MAAO,WAGpB,kBAACuQ,EAAA,EAAD,CAAcC,OAAK,GACjB,wBAAIhS,UAAU,2BACXuQ,KAAKV,MAAMvF,KAAKyB,aAEnB,uBAAG/L,UAAU,sCACVuQ,KAAKV,MAAMvF,KAAK4B,mBAEnB,kBAAC+F,EAAA,EAAD,CAAcC,SAAO,IACrB,kBAACD,EAAA,EAAD,CAAc5N,QAAS,kBAAM,EAAKuM,WAAlC,kBASZ,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEtH,OAAK,EACL+D,KAAK,IACL8E,OAAQ,kBACN,oCACE,kBAAC,GAAD,CAAehN,KAAM,EAAK0K,MAAMvF,KAAKyB,cACrC,kBAACgD,EAAA,EAAD,KACE,kBAAC,IAAD,CACEzF,OAAK,EACL+D,KAAK,IACL8E,OAAQ,kBACN,oCACE,kBAAC,GAAD,CACExR,KAAM,EAAKkP,MAAME,UACjB3D,OAAQ,kBACN,EAAKoE,SAAS,CAAET,WAAW,OAG/B,kBAAC,GAAD,CACEvJ,QAAS,kBACP,EAAKgK,SAAS,CAAET,WAAW,KAE7B/P,UAAU,kBAS1B,kBAAC,IAAD,CACEsJ,OAAK,EACL+D,KAAK,UACL8E,OAAQ,kBACN,kBAACpD,EAAA,EAAD,KACE,kBAAC,GAAD,CAAYzC,WAAY,EAAKuD,MAAMvD,iBAIzC,kBAAC,IAAD,CACEhD,OAAK,EACL+D,KAAK,gBACL8E,OAAQ,kBACN,kBAACpD,EAAA,EAAD,KACE,kBAAC,GAAD,UAIN,kBAAC,IAAD,CACEzF,OAAK,EACL+D,KAAK,eACL8E,OAAQ,kBACN,kBAACpD,EAAA,EAAD,KACE,kBAAC,GAAD,CACEpO,KAAM,EAAKkP,MAAME,UACjB3D,OAAQ,kBAAM,EAAKoE,SAAS,CAAET,WAAW,OAE3C,kBAAC,GAAD,CACEvJ,QAAS,kBAAM,EAAKgK,SAAS,CAAET,WAAW,KAC1CqC,SAAU,SAAChN,EAAIM,EAAO2M,EAAOC,GAC3B,EAAK9B,SAAS,CACZ+B,kBAAmB7M,EACnB8M,aAAcH,EACdI,mBAAoBH,EAEpBI,SAAUtN,IAEZ,EAAKoL,SAAS,CAAE7J,eAAe,KAEjCJ,aAAa,QAKrB,kBAAC,IAAD,CAAO8G,KAAK,KACV,kBAAC,GAAD,CAAcN,OAAO,OAK3B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOM,KAAK,IAAI/D,OAAK,GACnB,kBAAC,GAAD,CAAajF,QAAS,kBAAM,EAAKsO,YAEnC,kBAAC,IAAD,CAAOtF,KAAK,KACV,kBAAC,GAAD,CAAcN,OAAO,OAM/B,kBAAC,EAAD,CAAerN,UAAW6Q,KAAKV,MAAMnQ,iB,GA5P3BkT,a,OCjClBC,IAASV,OACP,kBAAC,IAAMW,WAAP,KACE,kBAAC,GAAD,OAEFnN,SAASoN,eAAe,U","file":"static/js/main.31f1ab64.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport BeatLoader from \"react-spinners/BeatLoader\";\r\nimport \"./loadingScreen.css\";\r\nimport { css } from \"@emotion/react\";\r\nfunction LoadingScreen({ isloading }) {\r\n  const override = css`\r\n    display: block;\r\n    text-align: center;\r\n    border-color: #0275d8;\r\n  `;\r\n  return (\r\n    <>\r\n      {isloading ? (\r\n        <>\r\n        <br/>\r\n          <BeatLoader\r\n            color={\"red\"}\r\n            loading={isloading}\r\n            css={override}\r\n            size={50}\r\n          />\r\n          <br/>\r\n          <h4 className=\"center\">Loading</h4>\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoadingScreen;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://apistackoverflowiitg.herokuapp.com/\",\r\n});\r\n\r\nexport default instance;\r\n","import React, { useState,useEffect} from \"react\";\r\nimport { Modal, makeStyles, IconButton, Tooltip } from \"@material-ui/core\";\r\nimport axios from \"../axios.js\";\r\nimport { Button, Input } from \"reactstrap\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport LoadingScreen from \"./loadingscreen.js\";\r\nimport \"./ques_post_modal.css\";\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\nfunction EditQuesModal({\r\n  imageURL,\r\n  show,\r\n  hide,\r\n  ques_title,\r\n  questiondesc,\r\n  quid,\r\n}) {\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: \"absolute\",\r\n      width: \"75%\",\r\n      maxHeight: \"100%\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"2px solid #000\",\r\n      boxShadow: theme.shadows[5],\r\n      overflow: \"scroll\",\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n  const [question, setquestion] = useState(questiondesc);\r\n  const [question_title, setquestion_title] = useState(ques_title);\r\n  const [imagefileURL, setimagefileURL] = useState(imageURL);\r\n  const [imagefile, setimagefile] = useState(null);\r\n  const [loading, setloading] = useState(false);\r\n  const postquestion = async (event) => {\r\n    event.preventDefault();\r\n    setloading(true);\r\n    var formdata = new FormData();\r\n    formdata.append(\"question_title\", question_title);\r\n    formdata.append(\"question\", question);\r\n    if (imagefile != null) {\r\n      formdata.append(\"picture\", imagefile);\r\n      formdata.append(\"imageadded\", \"true\");\r\n    } else {\r\n      formdata.append(\"imageadded\", \"false\");\r\n    }\r\n    const request = await axios\r\n      .put(`/ques/${quid}`, formdata)\r\n      .then((response) => {\r\n        window.location.reload();\r\n      })\r\n      .catch((e) => console.log(e.message));\r\n  };\r\n  return (\r\n    <Modal open={show} onClose={hide}>\r\n      <center>\r\n        <div style={modalStyle} className={classes.paper}>\r\n          {!loading ? (\r\n            <>\r\n              <div className=\"modal-header\">\r\n                <h4>EDIT YOUR QUESTION</h4>\r\n                <IconButton\r\n                  aria-label=\"edit\"\r\n                  onClick={(e) => {\r\n                    hide();\r\n                  }}\r\n                >\r\n                  <CancelIcon\r\n                    className={classes.icon}\r\n                    style={{ color: \"red\" }}\r\n                  />\r\n                </IconButton>\r\n              </div>\r\n              <form\r\n                className=\"form__question\"\r\n                onSubmit={postquestion}\r\n                encType=\"multipart/form-data\"\r\n              >\r\n                <Input\r\n                  aria-label=\"minimum height\"\r\n                  type=\"text\"\r\n                  maxLength=\"177\"\r\n                  placeholder=\"Title of question in 177 characters\"\r\n                  value={question_title}\r\n                  className=\"mb-2\"\r\n                  required\r\n                  onChange={(e) => setquestion_title(e.target.value)}\r\n                />\r\n\r\n                <Input\r\n                  aria-label=\"minimum height\"\r\n                  type=\"textarea\"\r\n                  style={{ height: 200 }}\r\n                  placeholder=\"Describe your question\"\r\n                  value={question}\r\n                  required\r\n                  onChange={(e) => setquestion(e.target.value)}\r\n                />\r\n\r\n                <Input\r\n                  type=\"file\"\r\n                  accept=\"image/*\"\r\n                  name=\"picture\"\r\n                  id=\"exampleFile\"\r\n                  className=\"mt-2 mb-2\"\r\n                  onChange={(e) => {\r\n                    if (e.target.files[0] != null) {\r\n                      setimagefileURL(URL.createObjectURL(e.target.files[0]));\r\n                      setimagefile(e.target.files[0]);\r\n                    }\r\n                  }}\r\n                />\r\n\r\n                {imagefile!=null ? (\r\n                  <div className=\"uploadimg\">\r\n                    <div className=\"container-modal mb-3\">\r\n                      <img src={imagefileURL} />\r\n                      <div className=\"topright\">\r\n                        <Tooltip title=\"Delete File\">\r\n                          <IconButton\r\n                            aria-label=\"edit\"\r\n                            onClick={(e) => {\r\n                              setimagefileURL(null);\r\n                              console.log(imagefile);\r\n                              setimagefile(null);\r\n                              document.querySelector(\"#exampleFile\").value =\r\n                                null;\r\n                            }}\r\n                          >\r\n                            <CancelIcon\r\n                              className={classes.icon}\r\n                              style={{ color: \"red\" }}\r\n                            />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ) : null}\r\n                <Button type=\"submit\" color=\"warning\">\r\n                  Post Question\r\n                </Button>\r\n              </form>\r\n            </>\r\n          ) : (\r\n            <LoadingScreen isloading={true} />\r\n          )}\r\n        </div>\r\n      </center>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nfunction arrayRemove(arr, value) {\r\n  return arr.filter(function (ele) {\r\n    return ele != value;\r\n  });\r\n}\r\n\r\nexport default EditQuesModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"../axios.js\";\r\nimport { Card, CardBody, CardText, CardHeader, CardFooter } from \"reactstrap\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport { Avatar, Tooltip, IconButton } from \"@material-ui/core\";\r\nimport DeleteTwoToneIcon from \"@material-ui/icons/DeleteTwoTone\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport LoadingScreen from \"./loadingscreen.js\";\r\nimport EditQuesModal from \"./ques_update_modal.js\";\r\nimport \"./questionlist.css\";\r\nfunction QuestionCards({ myquestions, askques}) {\r\n  const [pageupdate, setpageupdate] = useState(true);\r\n  const [isloading, setloading] = useState(false);\r\n  const [modalShowedit, setmodalshowedit] = useState([]);\r\n  const [ques, setques] = useState([]);\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: \"flex\",\r\n      \"& > *\": {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    purple: {\r\n      marginTop: \"auto\",\r\n      marginBottom: \"auto\",\r\n      height: \"50px\",\r\n      width: \"50px\",\r\n      color: theme.palette.getContrastText(red[500]),\r\n      backgroundColor: red[500],\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    if (!myquestions) {\r\n      async function fetchData() {\r\n        setloading(true);\r\n        const request = await axios.get(\"/ques/\");\r\n        await setques(request.data);\r\n        console.log(request.data);\r\n        setloading(false);\r\n        setmodalshowedit(\r\n          Array.from({ length: request.data.length }, (_, index) => false)\r\n        );\r\n      }\r\n      fetchData();\r\n    } else {\r\n      async function fetchData() {\r\n        setloading(true);\r\n        const request = await axios.get(\r\n          `/ques/my/${JSON.parse(window.localStorage.getItem(\"user\")).id}`\r\n        );\r\n        await setques(request.data);\r\n        console.log(request.data);\r\n        setloading(false);\r\n        setmodalshowedit(\r\n          Array.from({ length: request.data.length }, (_, index) => false)\r\n        );\r\n      }\r\n      fetchData();\r\n    }\r\n  }, [pageupdate]);\r\n  const deleteques = async (id) => {\r\n    setloading(true);\r\n    setloading(false);\r\n    const request = await axios.delete(`/ques/${id}`);\r\n    \r\n    setpageupdate(!pageupdate);\r\n    \r\n  };\r\n  return (\r\n    <div>\r\n      <br />\r\n      <br />\r\n      <div className=\"head pb-2\">\r\n        <h2>{myquestions ? \"My\" : \"Recent\"} Questions</h2>\r\n        <button className=\"ask_to_ques\" onClick={() => askques()}>\r\n          Ask a Question\r\n        </button>\r\n      </div>\r\n\r\n      {isloading ? (\r\n        <LoadingScreen isloading={isloading} />\r\n      ) : (\r\n        ques.map((quess, index) => (\r\n          <>\r\n            <EditQuesModal\r\n              imageURL={quess.picture}\r\n              show={modalShowedit[index]}\r\n              hide={() =>\r\n                setmodalshowedit(\r\n                  Array.from({ length: ques.length }, (_, _index) => false)\r\n                )\r\n              }\r\n              ques_title={quess.question_title}\r\n              questiondesc={quess.question}\r\n              quid={quess._id}\r\n            />\r\n            <div key={quess._id}>\r\n              <Card>\r\n                <CardHeader className=\"card-header\">\r\n                  <div className=\"avatar-parent\">\r\n                    <Avatar className={classes.purple}>{quess.name[0]}</Avatar>\r\n                    <div style={{ width: \"6px\" }}></div>\r\n                    <div className=\"mt-auto mb-auto\">\r\n                      <div className=\"mt-auto mb-auto\">{quess.name}</div>\r\n                      {quess.emailid && quess.rollno ? (\r\n                        <>\r\n                          <small className=\"mt-auto mb-auto text-muted\">\r\n                            {quess.emailid}\r\n                          </small>\r\n                          <div />\r\n                          <small className=\"mt-auto mb-auto text-muted\">\r\n                            {quess.rollno}\r\n                          </small>\r\n                        </>\r\n                      ) : null}\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <small class=\"text-muted\">{quess.date}</small>\r\n                    {quess.userId ==\r\n                    JSON.parse(window.localStorage.getItem(\"user\")).id ? (\r\n                      <div class=\"button-bar\">\r\n                        <Tooltip\r\n                          className=\"mt-auto mb-auto\"\r\n                          title=\"Edit your question\"\r\n                        >\r\n                          <IconButton\r\n                            aria-label=\"edit\"\r\n                            onClick={() =>\r\n                              setmodalshowedit(\r\n                                Array.from(\r\n                                  { length: ques.length },\r\n                                  (_, _index) =>\r\n                                    _index == index ? true : false\r\n                                )\r\n                              )\r\n                            }\r\n                          >\r\n                            <CreateIcon\r\n                              className={classes.icon}\r\n                              style={{ color: \"blue\" }}\r\n                            />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip\r\n                          className=\"mt-auto mb-auto\"\r\n                          title=\"Delete your question\"\r\n                        >\r\n                          <IconButton\r\n                            aria-label=\"delete\"\r\n                            onClick={() => {\r\n                              deleteques(quess._id);\r\n                            }}\r\n                          >\r\n                            <DeleteTwoToneIcon\r\n                              className={classes.icon}\r\n                              style={{ color: \"red\" }}\r\n                            />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <CardText>\r\n                    <strong>Question: </strong>\r\n                    <NewlineText text={quess.question_title} id={quess._id} />\r\n                  </CardText>\r\n                </CardBody>\r\n                <CardFooter>\r\n                  <RouterNavLink\r\n                    to={`/question/${quess._id}`}\r\n                    className=\"link_to_ques\"\r\n                    exact\r\n                  >\r\n                    <div className=\"view\">Answers &nbsp; </div>\r\n                  </RouterNavLink>\r\n                </CardFooter>\r\n              </Card>\r\n              <br />\r\n            </div>\r\n          </>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nfunction NewlineText(props) {\r\n  var index = 0;\r\n  const text = props.text;\r\n  return text.split(\"\\n\").map((str) => {\r\n    index++;\r\n    return <p key={props.id + \"_\" + index}>{str}</p>;\r\n  });\r\n}\r\nexport default QuestionCards;\r\n","export const config = {\n  clientId: \"ff607b18-dcf4-47db-8fa6-6258f68371fa\",\n  redirectUri: \"https://determined-hopper-c48e23.netlify.app/\",\n  scopes: [\"user.read\"],\n};","var graph = require(\"@microsoft/microsoft-graph-client\");\n\nfunction getAuthenticatedClient(accessToken) {\n  const client = graph.Client.init({\n    authProvider: (done) => {\n      done(null, accessToken);\n    },\n  });\n  return client;\n}\n\nexport async function getUserDetails(accessToken) {\n  const client = getAuthenticatedClient(accessToken);\n\n  const user = await client.api(\"/me\").get();\n\n  return user;\n}\n","import { getUserDetails } from '../GraphService';\n\nexport function normalizeError(error) {\n    var normalizedError = {};\n    if (typeof (error) === 'string') {\n        var errParts = error.split('|');\n        normalizedError = errParts.length > 1 ?\n            { message: errParts[1], debug: errParts[0] } :\n            { message: error };\n    } else {\n        normalizedError = {\n            message: error.message,\n            debug: JSON.stringify(error)\n        };\n    }\n    return normalizedError;\n}\n\nexport async function getUserProfile(userAgentApplication, scopes) {\n    try {\n        var accessToken = await getAccessToken(userAgentApplication, scopes);\n\n        if (accessToken) {\n            return await getUserDetails(accessToken);\n        }\n        return null;\n    }\n    catch (err) {\n        throw err;\n    }\n}\n\nasync function getAccessToken(userAgentApplication, scopes) {\n    try {\n        var silentResult = await userAgentApplication\n            .acquireTokenSilent({\n                scopes: scopes\n            });\n\n        return silentResult.accessToken;\n    } catch (err) {\n        if (isInteractionRequired(err)) {\n            var interactiveResult = await userAgentApplication\n                .acquireTokenPopup({\n                    scopes: scopes\n                });\n\n            return interactiveResult.accessToken;\n        } else {\n            throw err;\n        }\n    }\n}\n\nfunction isInteractionRequired(error) {\n    if (!error.message || error.message.length <= 0) {\n        return false;\n    }\n\n    return (\n        error.message.indexOf('consent_required') > -1 ||\n        error.message.indexOf('interaction_required') > -1 ||\n        error.message.indexOf('login_required') > -1 ||\n        error.message.indexOf('no_account_in_silent_request') > -1\n    );\n}","import React, { useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  makeStyles,\r\n  IconButton,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport axios from \"../axios.js\";\r\nimport { Button, Input } from \"reactstrap\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport LoadingScreen from \"./loadingscreen.js\";\r\nimport \"./ques_post_modal.css\";\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\nfunction MyVerticallyCenteredModal(props) {\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: \"absolute\",\r\n      width: \"75%\",\r\n      maxHeight: \"100%\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"2px solid #000\",\r\n      boxShadow: theme.shadows[5],\r\n      overflow: \"scroll\",\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const [question, setquestion] = useState(\"\");\r\n  const [question_title, setquestion_title] = useState(\"\");\r\n  const [imagefileURL, setimagefileURL] = useState(null);\r\n  const [imagefile, setimagefile] = useState(null);\r\n  const [loading, setloading] = useState(false);\r\n  const postquestion = async (event) => {\r\n    event.preventDefault();\r\n    setloading(true);\r\n    var keywordarray = question_title\r\n      .toLowerCase()\r\n      .trim()\r\n      .replace(/\\s\\s+/g, \" \")\r\n      .trim()\r\n      .replace(/(\\r\\n|\\n|\\r)/gm, \"\")\r\n      .split(\" \");\r\n    keywordarray = await arrayRemove(keywordarray, \"\");\r\n    var formdata = new FormData();\r\n    formdata.append(\r\n      \"name\",\r\n      JSON.parse(window.localStorage.getItem(\"user\")).displayName\r\n    );\r\n    formdata.append(\r\n      \"userId\",\r\n      JSON.parse(window.localStorage.getItem(\"user\")).id\r\n    );\r\n    formdata.append(\r\n      \"rollno\",\r\n      JSON.parse(window.localStorage.getItem(\"user\")).surname || null\r\n    );\r\n    formdata.append(\r\n      \"emailid\",\r\n      JSON.parse(window.localStorage.getItem(\"user\")).mail ||\r\n        JSON.parse(window.localStorage.getItem(\"user\")).userPrincipalName\r\n    );\r\n    formdata.append(\"question\", question);\r\n    formdata.append(\"question_title\", question_title);\r\n    if (imagefile != null) {\r\n      formdata.append(\"picture\", imagefile);\r\n      formdata.append(\"imageadded\", \"true\");\r\n    } else {\r\n      formdata.append(\"imageadded\", \"false\");\r\n    }\r\n    formdata.append(\"keywordarray\", keywordarray);\r\n    const request = await axios\r\n      .post(\"/ques/\", formdata)\r\n      .then((response) => {\r\n        window.location.reload();\r\n      })\r\n      .catch((e) => console.log(e.message));\r\n  };\r\n  \r\n  return (\r\n    <Modal open={props.show} onClose={props.onHide}>\r\n      <center>\r\n        <div style={modalStyle} className={classes.paper}>\r\n          {!loading ? (\r\n            <>\r\n              <div className=\"modal-header\">\r\n                <h4>ASK A QUESTION</h4>\r\n                <IconButton\r\n                  aria-label=\"edit\"\r\n                  onClick={(e) => {\r\n                    props.onHide();\r\n                  }}\r\n                >\r\n                  <CancelIcon\r\n                    className={classes.icon}\r\n                    style={{ color: \"red\" }}\r\n                  />\r\n                </IconButton>\r\n              </div>\r\n              <form\r\n                className=\"form__question\"\r\n                onSubmit={postquestion}\r\n                encType=\"multipart/form-data\"\r\n              >\r\n                <Input\r\n                  aria-label=\"minimum height\"\r\n                  type=\"text\"\r\n                  maxLength=\"177\"\r\n                  placeholder=\"Title of question in 177 characters\"\r\n                  value={question_title}\r\n                  className=\"mb-2\"\r\n                  required\r\n                  onChange={(e) => setquestion_title(e.target.value)}\r\n                />\r\n\r\n                <Input\r\n                  aria-label=\"minimum height\"\r\n                  type=\"textarea\"\r\n                  style={{ height: 200 }}\r\n                  placeholder=\"Describe your question\"\r\n                  value={question}\r\n                  required\r\n                  onChange={(e) => setquestion(e.target.value)}\r\n                />\r\n\r\n                <Input\r\n                  type=\"file\"\r\n                  accept=\"image/*\"\r\n                  name=\"picture\"\r\n                  id=\"exampleFile\"\r\n                  className=\"mt-2 mb-2\"\r\n                  onChange={(e) => {\r\n                    if (e.target.files[0] != null) {\r\n                      setimagefileURL(URL.createObjectURL(e.target.files[0]));\r\n                      setimagefile(e.target.files[0]);\r\n                    }\r\n                  }}\r\n                />\r\n\r\n                {imagefileURL != null ? (\r\n                  <div className=\"uploadimg\">\r\n                    <div className=\"container-modal mb-3\">\r\n                      <img src={imagefileURL} />\r\n                      <div className=\"topright\">\r\n                        <Tooltip title=\"Delete File\">\r\n                          <IconButton\r\n                            aria-label=\"edit\"\r\n                            onClick={(e) => {\r\n                              setimagefileURL(null);\r\n                              console.log(imagefile);\r\n                              setimagefile(null);\r\n                              document.querySelector(\"#exampleFile\").value =\r\n                                null;\r\n                            }}\r\n                          >\r\n                            <CancelIcon\r\n                              className={classes.icon}\r\n                              style={{ color: \"red\" }}\r\n                            />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ) : null}\r\n                <Button type=\"submit\" color=\"warning\">\r\n                  Post Question\r\n                </Button>\r\n              </form>\r\n            </>\r\n          ) : (\r\n            <LoadingScreen isloading={true} />\r\n          )}\r\n        </div>\r\n      </center>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nfunction arrayRemove(arr, value) {\r\n  return arr.filter(function (ele) {\r\n    return ele != value;\r\n  });\r\n}\r\n\r\nexport default MyVerticallyCenteredModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"../axios.js\";\r\nimport { Card, CardBody, CardText, CardHeader, CardTitle } from \"reactstrap\";\r\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\r\nimport \"./searchpage.css\"\r\nfunction SearchPage({ searchtext }) {\r\n  const [searchques, setques] = useState([]);\r\n  useEffect(() => {\r\n    setques([]);\r\n    async function fetchData() {\r\n      const request = await axios.get(\"/ques/\");\r\n      const searchtextarray = searchtext\r\n        .toLowerCase()\r\n        .trim()\r\n        .replace(/\\s\\s+/g, \" \")\r\n        .trim()\r\n        .replace(/(\\r\\n|\\n|\\r)/gm, \"\")\r\n        .split(\" \");\r\n      for (var i = 0; i < request.data.length; i++) {\r\n        var index = 0;\r\n\r\n        console.log(request.data[i].keywordarray);\r\n        for (var l = 0; l < searchtextarray.length; l++) {\r\n          console.log(`index loop with ${request.data[i].keywordarray}`);\r\n          if (request.data[i].keywordarray.includes(searchtextarray[l])) {\r\n            index += 1;\r\n          }\r\n        }\r\n\r\n        if (index - searchtextarray.length >= -5 && index !== 0)\r\n          setques((arr) => [...arr, request.data[i]]);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [searchtext]);\r\n  if (searchques.length != 0 &&searchtext.length!=0)\r\n    return searchques.map((searchquess) => (\r\n      <div key={searchquess._id}>\r\n        <Card className=\"mt-2\">\r\n          <CardHeader>Recent Questions</CardHeader>\r\n          <CardBody>\r\n            <CardTitle>\r\n              <strong>Asked by: </strong>\r\n              {searchquess.name}\r\n            </CardTitle>\r\n            <CardText>\r\n              <strong>Question: </strong>\r\n              <NewlineText\r\n                text={searchquess.question_title}\r\n                id={searchquess._id}\r\n              />\r\n            </CardText>\r\n            <RouterNavLink\r\n              to={`/question/${searchquess._id}`}\r\n              className=\"btn btn-warning\"\r\n              exact\r\n            >\r\n              View Question\r\n            </RouterNavLink>\r\n          </CardBody>\r\n        </Card>\r\n        <br />\r\n      </div>\r\n    ));\r\n  else{\r\n    return(<div class=\"no-search\">\r\n      No Search Results\r\n    </div>);\r\n  }\r\n}\r\nfunction NewlineText(props) {\r\n  var index = 0;\r\n  const text = props.text;\r\n  return text.split(\"\\n\").map((str) => {\r\n    index++;\r\n    return <p key={props.id + \"_\" + index}>{str}</p>;\r\n  });\r\n}\r\n\r\nexport default SearchPage;\r\n","import React, { Component } from \"react\";\r\nimport BeatLoader from \"react-spinners/MoonLoader\";\r\nimport \"./loadingScreen.css\";\r\nimport { css } from \"@emotion/react\";\r\nimport \"./notfoundpage.css\";\r\nfunction NotFoundPage({ is404 }) {\r\n  return (\r\n    <>\r\n      {is404 ? (\r\n        <div id=\"notfound\">\r\n          <div class=\"notfound\">\r\n            <div class=\"notfound-404\">\r\n              <h1>Oops!</h1>\r\n            </div>\r\n            <h2>404 - Page not found</h2>\r\n            <p>\r\n              The page you are looking for might have been removed had its name\r\n              changed or is temporarily unavailable.\r\n            </p>\r\n            <a href=\"/\">Go To Homepage</a>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NotFoundPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"../axios.js\";\r\nimport {\r\n  Card,\r\n  Container,\r\n  CardBody,\r\n  CardText,\r\n  CardHeader,\r\n  CardTitle,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport LoadingScreen from \"./loadingscreen.js\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport DeleteTwoToneIcon from \"@material-ui/icons/DeleteTwoTone\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport { deepOrange, deepPurple } from \"@material-ui/core/colors\";\r\nimport { Avatar, Tooltip, IconButton } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport NotFoundPage from \"./notfoundpage.js\";\r\nimport \"./singlequestion.css\";\r\nfunction SingleQuestion() {\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: \"flex\",\r\n      \"& > *\": {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    orange: {\r\n      color: theme.palette.getContrastText(deepOrange[500]),\r\n      backgroundColor: deepOrange[500],\r\n      height: \"50px\",\r\n      width: \"50px\",\r\n    },\r\n    purple: {\r\n      color: theme.palette.getContrastText(deepPurple[500]),\r\n      backgroundColor: deepPurple[500],\r\n    },\r\n  }));\r\n  const [path, setPath] = useState(\r\n    window.location.href.split(\"/\")[window.location.href.split(\"/\").length - 1]\r\n  );\r\n  const [singleques, setques] = useState([]);\r\n  const [answers, setanswer] = useState([]);\r\n  const [answerpost, setanswerpost] = useState(\"\");\r\n  const [editanswerpost, seteditanswerpost] = useState(\"\");\r\n  const [editanswerid, seteditanswerid] = useState(\"\");\r\n  const [update, setupdate] = useState(true);\r\n  const [editsoln, seteditsoln] = useState(false);\r\n  const [imagefileURL, setimagefileURL] = useState(null);\r\n  const [imagefile, setimagefile] = useState(null);\r\n  const [loading, setloading] = useState(false);\r\n  const [editimagesrc, seteditimagesrc] = useState(null);\r\n  const [editimage, seteditimage] = useState(null);\r\n  const [is404, set404] = useState(false);\r\n  const [ifimageexist, setifimageexist] = useState(false);\r\n  const addanswer = async (event) => {\r\n    event.preventDefault();\r\n    setloading(true);\r\n    var formdata = new FormData();\r\n    formdata.append(\r\n      \"name\",\r\n      JSON.parse(window.localStorage.getItem(\"user\")).displayName\r\n    );\r\n    formdata.append(\r\n      \"userId\",\r\n      JSON.parse(window.localStorage.getItem(\"user\")).id\r\n    );\r\n    formdata.append(\r\n      \"rollno\",\r\n      JSON.parse(window.localStorage.getItem(\"user\")).surname || null\r\n    );\r\n    formdata.append(\r\n      \"emailid\",\r\n      JSON.parse(window.localStorage.getItem(\"user\")).mail ||\r\n        JSON.parse(window.localStorage.getItem(\"user\")).userPrincipalName\r\n    );\r\n    formdata.append(\"answer\", answerpost);\r\n    formdata.append(\"questionID\", singleques._id);\r\n    if (imagefile != null) {\r\n      formdata.append(\"picture\", imagefile);\r\n      formdata.append(\"imageadded\", \"true\");\r\n    } else {\r\n      formdata.append(\"imageadded\", \"false\");\r\n    }\r\n    const request = await axios\r\n      .post(\"/ques/answer\", formdata)\r\n      .then((response) => {\r\n        setupdate(!update);\r\n        setimagefileURL(null);\r\n        setanswerpost(\"\");\r\n        setimagefile(null);\r\n        document.querySelector(\"#exampleFile\").value = null;\r\n      })\r\n      .catch((e) => console.log(e.message));\r\n    setloading(false);\r\n  };\r\n  const deleteans = async (id) => {\r\n    setloading(true);\r\n    const request = await axios\r\n      .delete(`ques/answer/${singleques._id}/${id}`)\r\n      .then((response) => setupdate(!update))\r\n      .catch((e) => console.log(e.message));\r\n    setloading(false);\r\n  };\r\n  const editans = async (id) => {\r\n    setloading(true);\r\n    var formdata = new FormData();\r\n    if (editimage != null) {\r\n      formdata.append(\"picture\", editimage);\r\n      formdata.append(\"imageadded\", \"true\");\r\n    } else {\r\n      formdata.append(\"imageadded\", \"false\");\r\n    }\r\n    formdata.append(\"answer\", editanswerpost);\r\n    const request = await axios\r\n      .put(`ques/answer/${singleques._id}/${id}`, formdata)\r\n      .then((response) => {\r\n        setupdate(!update);\r\n        seteditsoln(false);\r\n        seteditanswerid(\"\");\r\n        seteditanswerpost(\"\");\r\n      })\r\n      .catch((e) => console.log(e.message));\r\n    setloading(false);\r\n  };\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios\r\n        .get(`/ques/${path}`)\r\n        .catch((err) => set404(true));\r\n      const request_ans = await axios.get(`/ques/answer/${path}`);\r\n      await setques(request.data);\r\n      await setanswer(request_ans.data);\r\n    }\r\n    fetchData();\r\n  }, [update]);\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <NotFoundPage is404={is404} />\r\n      {!is404 ? (\r\n        <>\r\n          {loading ? (\r\n            <LoadingScreen isloading={true} />\r\n          ) : (\r\n            <>\r\n              <Container>\r\n                <h2 className=\"pt-4 pb-2\">Question</h2>\r\n                <Card>\r\n                  <CardHeader tag=\"h5\">\r\n                    <strong>{singleques.question_title}</strong>\r\n                    <div>\r\n                      <small class=\"text-muted\">{singleques.date}</small>\r\n                    </div>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <CardTitle>\r\n                      <strong>Description: </strong>\r\n                    </CardTitle>\r\n                    <CardText>\r\n                      <NewlineText\r\n                        text={singleques.question}\r\n                        id={singleques._id}\r\n                      />\r\n                    </CardText>\r\n                    <img\r\n                      src={singleques.picture}\r\n                      className=\"image_ques\"\r\n                      onClick={() => window.open(singleques.picture, \"_blank\")}\r\n                    />\r\n                    <CardTitle tag=\"h5\">\r\n                      <strong>Asked By: </strong>\r\n                    </CardTitle>\r\n                    <CardText>\r\n                      <strong>\r\n                        <small className=\"text-muted\">\r\n                          {singleques.name}\r\n                          <br />\r\n                        </small>\r\n                      </strong>\r\n                      <small className=\"text-muted\">\r\n                        {singleques.emailid}\r\n                        <br />\r\n                      </small>\r\n\r\n                      <small className=\"text-muted\">\r\n                        {singleques.rollno}\r\n                        <br />\r\n                      </small>\r\n                    </CardText>\r\n                  </CardBody>\r\n                </Card>\r\n                <br />\r\n                {answers.length === 0 ? (\r\n                  <h2>No Solution yet</h2>\r\n                ) : (\r\n                  <h2>Solutions</h2>\r\n                )}\r\n                {answers.map((answer) => (\r\n                  <div key={answer._id}>\r\n                    <Card>\r\n                      <CardHeader\r\n                        style={{\r\n                          display: \"flex\",\r\n                          flexDirection: \"row\",\r\n                          justifyContent: \"space-between\",\r\n                        }}\r\n                      >\r\n                        <div className=\"avatar-parent\">\r\n                          <Avatar\r\n                            className={classes.orange}\r\n                            style={{ marginTop: \"auto\", marginBottom: \"auto\" }}\r\n                          >\r\n                            {answer.name[0]}\r\n                          </Avatar>\r\n                          <div style={{ width: \"6px\" }}></div>\r\n                          <div className=\"mt-auto mb-auto\">\r\n                            <div className=\"mt-auto mb-auto\">{answer.name}</div>\r\n                            {answer.emailid && answer.rollno ? (\r\n                              <>\r\n                                <small className=\"mt-auto mb-auto text-muted\">\r\n                                  {answer.emailid}\r\n                                </small>\r\n                                <div />\r\n                                <small className=\"mt-auto mb-auto text-muted\">\r\n                                  {answer.rollno}\r\n                                </small>\r\n                              </>\r\n                            ) : null}\r\n                          </div>\r\n                        </div>\r\n                        {answer.userId ==\r\n                        JSON.parse(window.localStorage.getItem(\"user\")).id ? (\r\n                          <div>\r\n                            <Tooltip\r\n                              className=\"mt-auto mb-auto\"\r\n                              title=\"Edit your solution\"\r\n                            >\r\n                              <IconButton\r\n                                aria-label=\"edit\"\r\n                                onClick={() => {\r\n                                  seteditsoln(true);\r\n                                  seteditanswerid(answer._id);\r\n                                  seteditimagesrc(answer.picture);\r\n                                  seteditanswerpost(answer.answer);\r\n                                  setifimageexist(answer.picture.length > 0);\r\n                                }}\r\n                              >\r\n                                <CreateIcon\r\n                                  className={classes.icon}\r\n                                  style={{ color: \"blue\" }}\r\n                                />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip\r\n                              className=\"mt-auto mb-auto\"\r\n                              title=\"Delete your solution\"\r\n                            >\r\n                              <IconButton\r\n                                aria-label=\"delete\"\r\n                                onClick={() => deleteans(answer._id)}\r\n                              >\r\n                                <DeleteTwoToneIcon\r\n                                  className={classes.icon}\r\n                                  style={{ color: \"red\" }}\r\n                                />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                          </div>\r\n                        ) : null}\r\n                      </CardHeader>\r\n\r\n                      <CardBody>\r\n                        <CardText>\r\n                          <strong>Solution: </strong>\r\n                          <NewlineText text={answer.answer} id={answer._id} />\r\n                        </CardText>\r\n\r\n                        <img\r\n                          src={answer.picture}\r\n                          className=\"image_ans\"\r\n                          onClick={() =>\r\n                            window.open(singleques.picture, \"_blank\")\r\n                          }\r\n                        />\r\n                      </CardBody>\r\n                    </Card>\r\n                    <br />\r\n                  </div>\r\n                ))}\r\n                <br />\r\n                {editsoln ? (\r\n                  <>\r\n                    <h2>Edit your Solution</h2>\r\n                    <Form>\r\n                      <FormGroup>\r\n                        <Input\r\n                          type=\"textarea\"\r\n                          value={editanswerpost}\r\n                          required\r\n                          onChange={(e) => seteditanswerpost(e.target.value)}\r\n                          className=\"mb-2\"\r\n                          style={{ height: 200 }}\r\n                        />\r\n                      </FormGroup>\r\n\r\n                      <FormGroup className=\"editimg\">\r\n                        <div className=\"container-modal mb-3\">\r\n                          <img src={editimagesrc} />\r\n                          <div className=\"topright\">\r\n                            <Tooltip title=\"Delete File\">\r\n                              <IconButton\r\n                                aria-label=\"edit\"\r\n                                onClick={(e) => {\r\n                                  seteditimagesrc(null);\r\n                                  seteditimage(null);\r\n                                  setifimageexist(false);\r\n                                  document.querySelector(\r\n                                    \"#exampleFile2\"\r\n                                  ).value = null;\r\n                                  document.querySelector(\r\n                                    \".editimg\"\r\n                                  ).style.display = \"none\";\r\n                                }}\r\n                              >\r\n                                {ifimageexist ? (\r\n                                  <CancelIcon\r\n                                    className={classes.icon}\r\n                                    style={{ color: \"red\" }}\r\n                                  />\r\n                                ) : null}\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                          </div>\r\n                        </div>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Input\r\n                          type=\"file\"\r\n                          accept=\"image/*\"\r\n                          name=\"picture\"\r\n                          id=\"exampleFile2\"\r\n                          className=\"mt-2 mb-2\"\r\n                          onChange={(e) => {\r\n                            if (e.target.files[0] != null) {\r\n                              seteditimagesrc(\r\n                                URL.createObjectURL(e.target.files[0])\r\n                              );\r\n                              setifimageexist(true);\r\n                              document.querySelector(\".editimg\").style.display =\r\n                                \"block\";\r\n                              seteditimage(e.target.files[0]);\r\n                            }\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup className=\"mb-1\">\r\n                        <Button\r\n                          className=\"btn btn-success\"\r\n                          onClick={() => editans(editanswerid)}\r\n                        >\r\n                          Confirm Changes\r\n                        </Button>\r\n                      </FormGroup>\r\n                      <FormGroup classNAme=\"mb-3\">\r\n                        <Button\r\n                          className=\"btn btn-danger\"\r\n                          onClick={() => {\r\n                            seteditsoln(false);\r\n                            seteditanswerid(\"\");\r\n                            seteditanswerpost(\"\");\r\n                          }}\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                      </FormGroup>\r\n                    </Form>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <h2>Add a Solution</h2>\r\n                    <Form>\r\n                      <FormGroup>\r\n                        <Input\r\n                          type=\"textarea\"\r\n                          value={answerpost}\r\n                          required\r\n                          onChange={(e) => setanswerpost(e.target.value)}\r\n                          className=\"mb-2\"\r\n                          style={{ height: 200 }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Input\r\n                          type=\"file\"\r\n                          accept=\"image/*\"\r\n                          name=\"picture\"\r\n                          id=\"exampleFile\"\r\n                          className=\"mt-2 mb-2\"\r\n                          onChange={(e) => {\r\n                            if (e.target.files[0] != null) {\r\n                              setimagefileURL(\r\n                                URL.createObjectURL(e.target.files[0])\r\n                              );\r\n                              setimagefile(e.target.files[0]);\r\n                            }\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      {imagefileURL != null ? (\r\n                        <div className=\"uploadimg-ans\">\r\n                          <div className=\"container-modal mb-3\">\r\n                            <img src={imagefileURL} />\r\n                            <div className=\"topright\">\r\n                              <Tooltip title=\"Delete File\">\r\n                                <IconButton\r\n                                  aria-label=\"edit\"\r\n                                  onClick={(e) => {\r\n                                    setimagefileURL(null);\r\n                                    setimagefile(null);\r\n                                    document.querySelector(\r\n                                      \"#exampleFile\"\r\n                                    ).value = null;\r\n                                  }}\r\n                                >\r\n                                  <CancelIcon\r\n                                    className={classes.icon}\r\n                                    style={{ color: \"red\" }}\r\n                                  />\r\n                                </IconButton>\r\n                              </Tooltip>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ) : null}\r\n                      <FormGroup>\r\n                        <Button className=\"btn btn-success\" onClick={addanswer}>\r\n                          Submit\r\n                        </Button>\r\n                      </FormGroup>\r\n                    </Form>\r\n                  </>\r\n                )}\r\n              </Container>\r\n            </>\r\n          )}\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\nfunction NewlineText(props) {\r\n  var index = 0;\r\n  const text = props.text + \"\";\r\n  return text.split(\"\\n\").map((str) => {\r\n    index++;\r\n    return <p key={props.id + \"_\" + index}>{str}</p>;\r\n  });\r\n}\r\nexport default SingleQuestion;\r\n","import React from \"react\";\r\nimport \"./profileheader.css\";\r\nimport { Container } from \"reactstrap\";\r\nfunction ProfileHeader({ name }) {\r\n  return (\r\n    <div>\r\n      <div className=\"bg-text\">\r\n        <Container className=\"bg-text-cont\">\r\n          <h1 className=\"title\">IITG Stack Overflow</h1>\r\n          <h1>Welcome {name}</h1>\r\n          <p className=\"lead\">\r\n            This app is built using MERN Stack.\r\n            <br /> You can ask your tech related queries and someone will answer\r\n            them.\r\n            <br />\r\n            Use the navigation bar at the top of the page to get started.\r\n          </p>\r\n        </Container>\r\n      </div>\r\n\r\n      <img\r\n        src=\"https://res.cloudinary.com/dmcbeyvr4/image/upload/v1628275669/iitgstackoverflow/iitgback_ita5se.jpg\"\r\n        className=\"bg-image\"\r\n      ></img>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileHeader;\r\n","import React from \"react\";\r\nimport \"./loadingScreen.css\";\r\nimport \"./welcomepage.css\";\r\nfunction WelcomePage({ onClick }) {\r\n  return (\r\n    <>\r\n      <div className=\"page-manual\">\r\n        <div className=\"card-manual\">\r\n          <div className=\"container-manual\">\r\n            <div className=\"menu-manual\">\r\n              <img\r\n                className=\"iitgicon-manual\"\r\n                src=\"https://res.cloudinary.com/dmcbeyvr4/image/upload/v1628275671/iitgstackoverflow/iitgicon_njgwqm.png\"\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <br />\r\n            <div className=\"content-manual\">\r\n              <div className=\"text-manual\">\r\n                <h1>\r\n                  IITG <br />\r\n                  Stack Overflow\r\n                </h1>\r\n                <p>\r\n                  Welcome to IITG Stack Overflow <br />\r\n                  This application is built using MERN Stack where usrs can post\r\n                  their queries related to tech and other stuff\r\n                </p>\r\n                <button onClick={() => onClick()}>Let's go !</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <div className=\"photo-manual\"></div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default WelcomePage;\r\n","import React, { Component } from \"react\";\nimport LoadingScreen from \"./components/loadingscreen\";\nimport \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  NavLink as RouterNavLink,\n  Switch,\n} from \"react-router-dom\";\nimport {\n  Collapse,\n  Container,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  InputGroup,\n  InputGroupAddon,\n  Input,\n  FormGroup,\n} from \"reactstrap\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { UserAgentApplication } from \"msal\";\nimport QuestionCards from \"./components/questionlist\";\nimport { config } from \"./Config\";\nimport { normalizeError, getUserProfile } from \"./utils/MSUtils\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport MyVerticallyCenteredModal from \"./components/ques_post_model\";\nimport SearchPage from \"./components/searchpage\";\nimport SingleQuestion from \"./components/singlequestion\";\nimport ProfileHeader from \"./components/profileheader\";\nimport WelcomePage from \"./components/welcomepage\";\nimport NotFoundPage from \"./components/notfoundpage\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false,\n      isloading: false,\n      error: null,\n      modalShow: false,\n      isAuthenticated: localStorage.getItem(\"user\") !== null,\n      user: JSON.parse(window.localStorage.getItem(\"user\")),\n      searchtext: \"\",\n      _uniqueid: \"\",\n    };\n    this.userAgentApplication = new UserAgentApplication({\n      auth: {\n        clientId: config.clientId,\n        redirectUri: config.redirectUri,\n      },\n      cache: {\n        cacheLocation: \"sessionStorage\",\n        storeAuthStateInCookie: true,\n      },\n    });\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  }\n  async login() {\n    try {\n      await this.userAgentApplication.loginPopup({\n        scopes: config.scopes,\n        prompt: \"select_account\",\n      });\n      this.setState({\n        isloading: true,\n      });\n      const user = await getUserProfile(\n        this.userAgentApplication,\n        config.scopes\n      );\n      await window.localStorage.setItem(\"user\", JSON.stringify(user));\n      this.setState({\n        isAuthenticated: true,\n        user: {\n          displayName: user.displayName,\n          userPrincipalName: user.mail || user.userPrincipalName,\n          id: user.id,\n        },\n        error: null,\n        isloading: false,\n      });\n    } catch (err) {\n      this.setState({\n        isAuthenticated: false,\n        user: {},\n        error: normalizeError(err),\n        isloading: false,\n      });\n    }\n  }\n  async logout() {\n    await this.userAgentApplication.logout();\n    localStorage.removeItem(\"user\");\n  }\n  render() {\n    if (this.state.error) {\n      alert(this.state.error.message);\n      this.setState({ error: null });\n    }\n    return (\n      <>\n        {!this.state.isloading ? (\n          <Router>\n            {this.state.isAuthenticated ? (\n              <>\n                <Navbar color=\"dark\" dark expand=\"md\" className=\"p-3\">\n                  <Container>\n                    <NavbarBrand href=\"/\">IITG Stack Overflow</NavbarBrand>\n                    <NavbarToggler onClick={this.toggle} />\n                    <Collapse isOpen={this.state.isOpen} navbar>\n                      <Nav className=\"mr-auto\" navbar>\n                        <NavItem>\n                          <RouterNavLink to=\"/\" className=\"nav-link\" exact>\n                            Home\n                          </RouterNavLink>\n                        </NavItem>\n                        <NavItem>\n                          <RouterNavLink\n                            to=\"/myquestions\"\n                            className=\"nav-link\"\n                            exact\n                          >\n                            MyQuestions\n                          </RouterNavLink>\n                        </NavItem>\n                        <NavItem>\n                          <RouterNavLink\n                            to=\"/search\"\n                            className=\"nav-link\"\n                            exact\n                          >\n                            SearchPage\n                          </RouterNavLink>\n                        </NavItem>\n                      </Nav>\n                      <Nav>\n                        <FormGroup style={{ width: 300 }}>\n                          <InputGroup>\n                            <Input\n                              placeholder=\"Search a question\"\n                              size=\"md\"\n                              type=\"text\"\n                              value={this.state.searchtext}\n                              className=\"search-field\"\n                              onChange={(e) =>\n                                this.setState({ searchtext: e.target.value })\n                              }\n                            />\n                            <InputGroupAddon addonType=\"append\">\n                              <RouterNavLink\n                                to=\"/search\"\n                                className=\"btn btn-warning\"\n                                exact\n                              >\n                                <SearchIcon />\n                              </RouterNavLink>\n                            </InputGroupAddon>\n                          </InputGroup>\n                        </FormGroup>\n                      </Nav>\n                      <div className=\"input-width-1\" />\n                      <Nav navbar>\n                        <UncontrolledDropdown>\n                          <DropdownToggle nav caret>\n                            <i\n                              className=\"far fa-user-circle fa-lg rounded-circle align-self-center mr-2\"\n                              style={{ width: \"32px\" }}\n                            ></i>\n                          </DropdownToggle>\n                          <DropdownMenu right>\n                            <h5 className=\"dropdown-item-text mb-0\">\n                              {this.state.user.displayName}\n                            </h5>\n                            <p className=\"dropdown-item-text text-muted mb-0\">\n                              {this.state.user.userPrincipalName}\n                            </p>\n                            <DropdownItem divider />\n                            <DropdownItem onClick={() => this.logout()}>\n                              Sign Out\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </Nav>\n                    </Collapse>\n                  </Container>\n                </Navbar>\n                <Switch>\n                  <Route\n                    exact\n                    path=\"/\"\n                    render={() => (\n                      <>\n                        <ProfileHeader name={this.state.user.displayName} />\n                        <Container>\n                          <Route\n                            exact\n                            path=\"/\"\n                            render={() => (\n                              <>\n                                <MyVerticallyCenteredModal\n                                  show={this.state.modalShow}\n                                  onHide={() =>\n                                    this.setState({ modalShow: false })\n                                  }\n                                />\n                                <QuestionCards\n                                  askques={() =>\n                                    this.setState({ modalShow: true })\n                                  }\n                                  className=\"mt-5\"\n                                />\n                              </>\n                            )}\n                          />\n                        </Container>\n                      </>\n                    )}\n                  />\n                  <Route\n                    exact\n                    path=\"/search\"\n                    render={() => (\n                      <Container>\n                        <SearchPage searchtext={this.state.searchtext} />\n                      </Container>\n                    )}\n                  />\n                  <Route\n                    exact\n                    path=\"/question/:id\"\n                    render={() => (\n                      <Container>\n                        <SingleQuestion />\n                      </Container>\n                    )}\n                  />\n                  <Route\n                    exact\n                    path=\"/myquestions\"\n                    render={() => (\n                      <Container>\n                        <MyVerticallyCenteredModal\n                          show={this.state.modalShow}\n                          onHide={() => this.setState({ modalShow: false })}\n                        />\n                        <QuestionCards\n                          askques={() => this.setState({ modalShow: true })}\n                          editques={(id, title, quest, url) => {\n                            this.setState({\n                              editquestiontitle: title,\n                              editquestion: quest,\n                              editquestionimgurl: url,\n\n                              editquid: id,\n                            });\n                            this.setState({ modalShowedit: true });\n                          }}\n                          myquestions={true}\n                        />\n                      </Container>\n                    )}\n                  />\n                  <Route path=\"*\">\n                    <NotFoundPage is404={true} />\n                  </Route>\n                </Switch>\n              </>\n            ) : (\n              <Switch>\n                <Route path=\"/\" exact>\n                  <WelcomePage onClick={() => this.login()} />\n                </Route>\n                <Route path=\"*\">\n                  <NotFoundPage is404={true} />\n                </Route>\n              </Switch>\n            )}\n          </Router>\n        ) : null}\n        <LoadingScreen isloading={this.state.isloading} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}